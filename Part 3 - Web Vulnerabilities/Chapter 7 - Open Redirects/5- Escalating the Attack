- Attackers could use open redirects by themselves to make their phishing attacks more credible. For example, they could send this URL in an email
to a user: https://example.com/login?next=https://attacker.com/fake_login.html.

- Though this URL would first lead users to the legitimate website, it would redirect them to the attacker’s site after login. The attacker could host a fake login page on a malicious site that mirrors the legitimate site’s login page, and prompt the user to log in again with a message like this one:
Sorry! The password you provided was incorrect. Please enter
your username and password again.

- Believing they’ve entered an incorrect password, the user would provide their credentials to the attacker’s site. At this point, the attacker’s site could even redirect the user back to the legitimate site to keep the victim from realizing that their credentials were stolen.

- Since organizations can’t prevent phishing completely (because those attacks depend on human judgment), security teams will often dismiss open
redirects as trivial bugs if reported on their own. But open redirects can often serve as a part of a bug chain to achieve a bigger impact. For example,an open redirect can help you bypass URL blocklists and allowlists. Take this URL, for example:
https://example.com/?next=https://attacker.com/

- This URL will pass even well-implemented URL validators, because the URL is technically still on the legitimate website. Open redirects can,
therefore, help you maximize the impact of vulnerabilities like server-side request forgery (SSRF)

- If a site utilizes an allowlist to prevent SSRFs and allows requests to only a list of predefined URLs, an attacker can utilize an open redirect within those allowlisted pages to redirect the request anywhere

- You could also use open redirects to steal credentials and OAuth tokens. Often, when a page redirects to another site, browsers will include the originating URL as a referer HTTP request header. When the originating URL contains sensitive information, like authentication tokens, attackers can
induce an open redirect to steal the tokens via the referer header
